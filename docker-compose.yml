version: "3.8"

services:
  # Backend Main Service
  backend-main:
    build: ./backend-main
    container_name: deep-knowledge-backend-main
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-3.5-turbo}
      LANGCHAIN_SERVICE_URL: http://langchain-python:5000
    networks:
      - deep-knowledge-network

  # LangChain Python Service (Má»›i)
  langchain-python:
    build: ./langchain-python-service
    container_name: deep-knowledge-langchain
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      PORT: 5000
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DATABASE_URL: ${DATABASE_URL} # PostgreSQL connection
      DEFAULT_MODEL: ${DEFAULT_MODEL:-google/gemini-2.5-flash}
      APP_URL: ${APP_URL:-http://localhost:3000}
      APP_NAME: "Deep Knowledge AI Platform"
      FORCE_OPENAI: ${FORCE_OPENAI:-false}
    networks:
      - deep-knowledge-network

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: deep-knowledge-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      NODE_ENV: production
      BACKEND_MAIN_URL: http://backend-main:3001
      LANGCHAIN_SERVICE_URL: http://langchain-python:5000
    depends_on:
      - backend-main
      - langchain-python
    networks:
      - deep-knowledge-network

networks:
  deep-knowledge-network:
    driver: bridge
